{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios.js';\nconst initialState = {\n  posts: [],\n  popularPosts: [],\n  loading: false\n};\nexport const createPost = createAsyncThunk('post/createPost', async params => {\n  try {\n    const {\n      data\n    } = await axios.post('/posts', params);\n    console.log({\n      data\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const getAllPosts = createAsyncThunk('post/getAllPosts', async () => {\n  try {\n    const {\n      data\n    } = await axios.get('/posts');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const postSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // Создание поста\n    [createPost.pending]: state => {\n      state.loading = true;\n    },\n    [createPost.fulfilled]: (state, action) => {\n      state.loading = false;\n      console.log({\n        actionP: action\n      });\n      state.posts.push(action.payload);\n    },\n    [createPost.rejected]: state => {\n      state.loading = false;\n    },\n    // Получаение всех постов\n    [getAllPosts.pending]: state => {\n      state.loading = true;\n    },\n    [getAllPosts.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = action.payload.posts;\n      state.popularPosts = action.payload.popularPosts;\n    },\n    [getAllPosts.rejected]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","posts","popularPosts","loading","createPost","params","data","post","console","log","error","getAllPosts","get","postSlice","name","reducers","extraReducers","pending","state","fulfilled","action","actionP","push","payload","rejected","reducer"],"sources":["/Users/nargizaabdullinova/Projects/Study/Mern/client/src/redux/features/post/postSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios.js';\n\nconst initialState = {\n    posts: [],\n    popularPosts:[],\n    loading: false,\n};\n\nexport const createPost = createAsyncThunk(\n    'post/createPost',\n    async(params) => {\n        try {\n            const { data } = await axios.post('/posts', params);\n            console.log({data})\n            return data;\n        } catch (error) {\n            console.log(error)\n        }\n    }\n)\n\nexport const getAllPosts = createAsyncThunk('post/getAllPosts', async () => {\n    try {\n        const { data } = await axios.get('/posts')\n        return data\n    } catch (error) {\n        console.log(error)\n    }\n})\n\nexport const postSlice = createSlice({\n    name: 'post',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        // Создание поста\n        [createPost.pending]: (state) => {\n            state.loading = true\n        },\n        [createPost.fulfilled]: (state, action) => {\n            state.loading = false\n            console.log({actionP: action})\n            state.posts.push(action.payload)\n        },\n        [createPost.rejected]: (state) => {\n            state.loading = false\n        },\n        // Получаение всех постов\n        [getAllPosts.pending]: (state) => {\n            state.loading = true\n        },\n        [getAllPosts.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts = action.payload.posts\n            state.popularPosts = action.payload.popularPosts\n        },\n        [getAllPosts.rejected]: (state) => {\n            state.loading = false\n        },\n    },\n})\n\nexport default postSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,yBAAyB;AAE3C,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,YAAY,EAAC,EAAE;EACfC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CACtC,iBAAiB,EACjB,MAAMO,MAAM,IAAK;EACb,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,QAAQ,EAAEF,MAAM,CAAC;IACnDG,OAAO,CAACC,GAAG,CAAC;MAACH;IAAI,CAAC,CAAC;IACnB,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACtB;AACJ,CAAC,CACJ;AAED,OAAO,MAAMC,WAAW,GAAGb,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACxE,IAAI;IACA,MAAM;MAAEQ;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACa,GAAG,CAAC,QAAQ,CAAC;IAC1C,OAAON,IAAI;EACf,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACtB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMG,SAAS,GAAGhB,WAAW,CAAC;EACjCiB,IAAI,EAAE,MAAM;EACZd,YAAY;EACZe,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAE;IACX;IACA,CAACZ,UAAU,CAACa,OAAO,GAAIC,KAAK,IAAK;MAC7BA,KAAK,CAACf,OAAO,GAAG,IAAI;IACxB,CAAC;IACD,CAACC,UAAU,CAACe,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MACvCF,KAAK,CAACf,OAAO,GAAG,KAAK;MACrBK,OAAO,CAACC,GAAG,CAAC;QAACY,OAAO,EAAED;MAAM,CAAC,CAAC;MAC9BF,KAAK,CAACjB,KAAK,CAACqB,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC;IACpC,CAAC;IACD,CAACnB,UAAU,CAACoB,QAAQ,GAAIN,KAAK,IAAK;MAC9BA,KAAK,CAACf,OAAO,GAAG,KAAK;IACzB,CAAC;IACD;IACA,CAACQ,WAAW,CAACM,OAAO,GAAIC,KAAK,IAAK;MAC9BA,KAAK,CAACf,OAAO,GAAG,IAAI;IACxB,CAAC;IACD,CAACQ,WAAW,CAACQ,SAAS,GAAG,CAACD,KAAK,EAAEE,MAAM,KAAK;MACxCF,KAAK,CAACf,OAAO,GAAG,KAAK;MACrBe,KAAK,CAACjB,KAAK,GAAGmB,MAAM,CAACG,OAAO,CAACtB,KAAK;MAClCiB,KAAK,CAAChB,YAAY,GAAGkB,MAAM,CAACG,OAAO,CAACrB,YAAY;IACpD,CAAC;IACD,CAACS,WAAW,CAACa,QAAQ,GAAIN,KAAK,IAAK;MAC/BA,KAAK,CAACf,OAAO,GAAG,KAAK;IACzB;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeU,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}