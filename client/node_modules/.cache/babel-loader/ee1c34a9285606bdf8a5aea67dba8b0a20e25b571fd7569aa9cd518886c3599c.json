{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios.js';\nconst initialState = {\n  posts: [],\n  popularPosts: [],\n  loading: false\n};\nexport const createPost = createAsyncThunk('post/createPost', async params => {\n  try {\n    const {\n      data\n    } = await axios.post('/posts', params);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const getAllPosts = createAsyncThunk('post/getAllPosts', async () => {\n  try {\n    const {\n      data\n    } = await axios.get('/posts');\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const removePost = createAsyncThunk('post/removePost', async id => {\n  try {\n    const {\n      data\n    } = await axios.delete(`/posts/${id}`, id);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const updatePost = createAsyncThunk('post/updatePost', async updatedPost => {\n  try {\n    const {\n      data\n    } = await axios.put(`/posts/${updatedPost.id}`, updatedPost);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const postSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // Create post\n    [createPost.pending]: state => {\n      state.loading = true;\n    },\n    [createPost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts.push(action.payload);\n    },\n    [createPost.rejected]: state => {\n      state.loading = false;\n    },\n    // Get all posts\n    [getAllPosts.pending]: state => {\n      state.loading = true;\n    },\n    [getAllPosts.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = action.payload.posts;\n      state.popularPosts = action.payload.popularPosts;\n    },\n    [getAllPosts.rejected]: state => {\n      state.loading = false;\n    },\n    // Remove post\n    [removePost.pending]: state => {\n      state.loading = true;\n    },\n    [removePost.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.posts = state.posts.filter(post => post._id !== action.payload._id);\n    },\n    [removePost.rejected]: state => {\n      state.loading = false;\n    },\n    // Update post\n    [updatePost.pending]: state => {\n      state.loading = true;\n    },\n    [updatePost.fulfilled]: (state, action) => {\n      state.loading = false;\n      const index = state.posts.findIndex(post => post._id === action.payload._id);\n    },\n    [updatePost.rejected]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","posts","popularPosts","loading","createPost","params","data","post","error","console","log","getAllPosts","get","removePost","id","delete","updatePost","updatedPost","put","postSlice","name","reducers","extraReducers","pending","state","fulfilled","action","push","payload","rejected","filter","_id","index","findIndex","reducer"],"sources":["/Users/nargizaabdullinova/Projects/Study/Mern/client/src/redux/features/post/postSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios.js';\n\nconst initialState = {\n    posts: [],\n    popularPosts:[],\n    loading: false,\n};\n\nexport const createPost = createAsyncThunk(\n    'post/createPost',\n    async(params) => {\n        try {\n            const { data } = await axios.post('/posts', params);\n            return data;\n        } catch (error) {\n            console.log(error)\n        }\n    }\n)\n\nexport const getAllPosts = createAsyncThunk(\n    'post/getAllPosts', \n    async () => {\n        try {\n            const { data } = await axios.get('/posts')\n            return data\n        } catch (error) {\n            console.log(error)\n        }\n})\n\nexport const removePost = createAsyncThunk(\n    'post/removePost', \n    async(id) => {\n        try {\n            const { data } = await axios.delete(`/posts/${id}`, id);\n            return data;\n        } catch (error) {\n            console.log(error)\n        }\n})\n\nexport const updatePost = createAsyncThunk(\n    'post/updatePost', \n    async(updatedPost) => {\n        try {\n            const { data } = await axios.put(`/posts/${updatedPost.id}`, updatedPost);\n            return data;\n        } catch (error) {\n            console.log(error)\n        }\n})\n\nexport const postSlice = createSlice({\n    name: 'post',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        // Create post\n        [createPost.pending]: (state) => {\n            state.loading = true\n        },\n        [createPost.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts.push(action.payload)\n        },\n        [createPost.rejected]: (state) => {\n            state.loading = false\n        },\n        // Get all posts\n        [getAllPosts.pending]: (state) => {\n            state.loading = true\n        },\n        [getAllPosts.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts = action.payload.posts\n            state.popularPosts = action.payload.popularPosts\n        },\n        [getAllPosts.rejected]: (state) => {\n            state.loading = false\n        },\n        // Remove post\n        [removePost.pending]: (state) => {\n            state.loading = true\n        },\n        [removePost.fulfilled]: (state, action) => {\n            state.loading = false\n            state.posts = state.posts.filter((post) => post._id !== action.payload._id)\n        },\n        [removePost.rejected]: (state) => {\n            state.loading = false\n        },\n        // Update post\n        [updatePost.pending]: (state) => {\n            state.loading = true\n        },\n        [updatePost.fulfilled]: (state, action) => {\n            state.loading = false\n            const index = state.posts.findIndex((post) => post._id === action.payload._id )\n        },\n        [updatePost.rejected]: (state) => {\n            state.loading = false\n        },\n    },\n})\n\nexport default postSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}