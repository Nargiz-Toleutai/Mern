{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios.js';\nconst initialState = {\n  comments: [],\n  loading: false\n};\nexport const commentSlice = createSlice({\n  name: 'comment',\n  initialState,\n  reducers: {}\n});\nexport const createComment = createAsyncThunk('comment/createComment', async params => {\n  try {\n    const {\n      data\n    } = await axios.post('/comments', params);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","comments","loading","commentSlice","name","reducers","createComment","params","data","post","error","console","log","reducer"],"sources":["/Users/nargizaabdullinova/Projects/Study/Mern/client/src/redux/features/comment/commentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios.js';\n\nconst initialState = {\n    comments: [],\n    loading: false,\n}\n\nexport const commentSlice = createSlice({\n    name: 'comment',\n    initialState,\n    reducers: {},\n});\n\nexport const createComment = createAsyncThunk(\n    'comment/createComment',\n    async(params) => {\n        try {\n            const { data } = await axios.post('/comments', params);\n            return data;\n        } catch (error) {\n            console.log(error)\n        }\n    }\n)\n\nexport default commentSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,yBAAyB;AAE3C,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,SAAS;EACfJ,YAAY;EACZK,QAAQ,EAAE,CAAC;AACf,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGR,gBAAgB,CACzC,uBAAuB,EACvB,MAAMS,MAAM,IAAK;EACb,IAAI;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,WAAW,EAAEF,MAAM,CAAC;IACtD,OAAOC,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC,CACJ;AAED,eAAeP,YAAY,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}