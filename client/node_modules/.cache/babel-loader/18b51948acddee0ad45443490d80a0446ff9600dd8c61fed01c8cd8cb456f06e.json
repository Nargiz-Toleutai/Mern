{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from '../../../utils/axios';\nconst initialState = {\n  comments: [],\n  loading: false\n};\nexport const createComment = createAsyncThunk('comment/createComment', async _ref => {\n  let {\n    postId,\n    comment\n  } = _ref;\n  try {\n    const {\n      data\n    } = await axios.post(`/comments/${postId}`, {\n      postId,\n      comment\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const getPostComments = createAsyncThunk('comment/getPostComments', async postId => {\n  try {\n    const {\n      data\n    } = await axios.get(`/posts/comments/${postId}`);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const removeComment = createAsyncThunk('comment/removeComment', async id => {\n  try {\n    const {\n      data\n    } = await axios.delete(`/posts/comments/${id}`, id);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const updateComment = createAsyncThunk('comment/updateComment', async updateComment => {\n  try {\n    const {\n      data\n    } = await axios.put(`/posts/comments/${updateComment.id}`, updateComment);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const commentSlice = createSlice({\n  name: 'comment',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    // Создание поста\n    [createComment.pending]: state => {\n      state.loading = true;\n    },\n    [createComment.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.comments.push(action.payload);\n    },\n    [createComment.rejected]: state => {\n      state.loading = false;\n    },\n    // Получение комментов\n    [getPostComments.pending]: state => {\n      state.loading = true;\n    },\n    [getPostComments.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.comments = action.payload;\n    },\n    [getPostComments.rejected]: state => {\n      state.loading = false;\n    }\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","comments","loading","createComment","_ref","postId","comment","data","post","error","console","log","getPostComments","get","removeComment","id","delete","updateComment","put","commentSlice","name","reducers","extraReducers","pending","state","fulfilled","action","push","payload","rejected","reducer"],"sources":["/Users/nargizaabdullinova/Projects/Study/Mern/client/src/redux/features/comment/commentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from '../../../utils/axios'\n\nconst initialState = {\n    comments: [],\n    loading: false,\n}\n\nexport const createComment = createAsyncThunk(\n    'comment/createComment',\n    async ({ postId, comment }) => {\n        try {\n            const { data } = await axios.post(`/comments/${postId}`, {\n                postId,\n                comment,\n            })\n            return data\n        } catch (error) {\n            console.log(error)\n        }\n    },\n)\n\nexport const getPostComments = createAsyncThunk(\n    'comment/getPostComments',\n    async (postId) => {\n        try {\n            const { data } = await axios.get(`/posts/comments/${postId}`)\n            return data\n        } catch (error) {\n            console.log(error)\n        }\n    },\n);\n\nexport const removeComment = createAsyncThunk(\n    'comment/removeComment', \n    async(id) => {\n        try {\n            const { data } = await axios.delete(`/posts/comments/${id}`, id);\n            return data;\n        } catch (error) {\n            console.log(error)\n        }\n})\n\nexport const updateComment = createAsyncThunk(\n    'comment/updateComment', \n    async(updateComment) => {\n        try {\n            const { data } = await axios.put(`/posts/comments/${updateComment.id}`, updateComment);\n            return data;\n        } catch (error) {\n            console.log(error)\n        }\n})\n\nexport const commentSlice = createSlice({\n    name: 'comment',\n    initialState,\n    reducers: {},\n    extraReducers: {\n        // Создание поста\n        [createComment.pending]: (state) => {\n            state.loading = true\n        },\n        [createComment.fulfilled]: (state, action) => {\n            state.loading = false\n            state.comments.push(action.payload)\n        },\n        [createComment.rejected]: (state) => {\n            state.loading = false\n        },\n        // Получение комментов\n        [getPostComments.pending]: (state) => {\n            state.loading = true\n        },\n        [getPostComments.fulfilled]: (state, action) => {\n            state.loading = false\n            state.comments = action.payload\n        },\n        [getPostComments.rejected]: (state) => {\n            state.loading = false\n        },\n    },\n})\n\nexport default commentSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}