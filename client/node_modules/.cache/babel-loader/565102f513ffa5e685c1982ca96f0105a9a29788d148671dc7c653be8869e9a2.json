{"ast":null,"code":"var _jsxFileName = \"/Users/nargizaabdullinova/Projects/Study/Mern/client/src/components/CommentItem.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { AiTwotoneEdit, AiFillDelete } from 'react-icons/ai';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeComment } from '../redux/features/post/commentSlice';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CommentItem = _ref => {\n  _s();\n  let {\n    cmt\n  } = _ref;\n  const avatar = cmt.comment.trim().toUpperCase().split('').slice(0, 2);\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const params = useParams();\n  console.log({\n    params1: params\n  });\n  const removeCommentHandler = () => {\n    try {\n      dispatch(removeComment(params.id));\n      toast('Comment was deleted');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center gap-3\",\n    children: [(user === null || user === void 0 ? void 0 : user._id) === comment.author && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-3 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"flex items-center justify-center gap-2 text-white opacity-50\",\n        children: /*#__PURE__*/_jsxDEV(AiTwotoneEdit, {\n          onClick: setComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeCommentHandler,\n        className: \"flex items-center justify-center gap-2  text-white opacity-50\",\n        children: /*#__PURE__*/_jsxDEV(AiFillDelete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center shrink-0 rounded-full w-10 h-10 bg-blue-300 text-sm\",\n      children: avatar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex text-gray-300 text-[10px]\",\n      children: cmt.comment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(CommentItem, \"Js/RY15KZe45s5q42Ac8hZZVE7U=\", false, function () {\n  return [useSelector, useDispatch, useParams];\n});\n_c = CommentItem;\nvar _c;\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"names":["React","useState","AiTwotoneEdit","AiFillDelete","useParams","useDispatch","useSelector","removeComment","toast","jsxDEV","_jsxDEV","CommentItem","_ref","_s","cmt","avatar","comment","trim","toUpperCase","split","slice","user","state","auth","setComment","dispatch","params","console","log","params1","removeCommentHandler","id","error","className","children","_id","author","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nargizaabdullinova/Projects/Study/Mern/client/src/components/CommentItem.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport {\n    AiTwotoneEdit,\n    AiFillDelete,\n} from 'react-icons/ai';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { removeComment } from '../redux/features/post/commentSlice';\nimport { toast } from 'react-toastify'\n\n\nexport const CommentItem = ({ cmt }) => {\n    const avatar = cmt.comment.trim().toUpperCase().split('').slice(0, 2);\n\n\n    const { user } = useSelector((state) => state.auth)\n    const [comment, setComment] = useState('');\n    const dispatch = useDispatch();\n    const params = useParams();\n    console.log({params1: params})\n\n    const removeCommentHandler = () => {\n        try {\n            dispatch(removeComment(params.id))\n            toast('Comment was deleted')\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    return (\n        <div className='flex items-center gap-3'>\n               {user?._id === comment.author && (\n                            <div className='flex gap-3 mt-4'>\n                                <button className='flex items-center justify-center gap-2 text-white opacity-50'>\n                                    {/* <Link to={`/${params.id}/edit`}> */}\n                                        <AiTwotoneEdit onClick={setComment}/>\n                                    {/* </Link> */}\n                                </button>\n                                <button\n                                    onClick={removeCommentHandler}\n                                    className='flex items-center justify-center gap-2  text-white opacity-50'\n                                >\n                                    <AiFillDelete />\n                                </button>\n                            </div>\n                        )}\n            <div className='flex items-center justify-center shrink-0 rounded-full w-10 h-10 bg-blue-300 text-sm'>\n                {avatar}\n            </div>\n            <div className='flex text-gray-300 text-[10px]'>{cmt.comment}</div>\n        </div>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}